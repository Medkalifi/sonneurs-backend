name: Deploy to Cloud Run

on:
  # Déploiement manuel via bouton GitHub Actions
  workflow_dispatch:
    inputs:
      environment:
        required: true
        type: choice
        options: [dev, prod]

  # Déclenchement automatique depuis un autre workflow (repository_dispatch)
  repository_dispatch:
    types: [deploy-cloudrun]

env:
  REGION: us-central1
  SERVICE_NAME: springboot-backend
  GCP_CREDENTIALS: ${{ secrets.GCP_CREDENTIALS }}

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository (utile si on lit .env)
        uses: actions/checkout@v4

      - name: Auth GCP
        run: |
          echo "${GCP_CREDENTIALS}" | base64 --decode > gcp-key.json
          gcloud auth activate-service-account --key-file=gcp-key.json

      - name: Déploiement selon mode
        env:
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
        run: |
          # Détection de l'environnement
          if [[ "${{ github.event_name }}" == "repository_dispatch" ]]; then
            ENVIRONMENT="${{ github.event.client_payload.environment }}"
            IMAGE_URI="${{ github.event.client_payload.image_uri }}"
          else
            ENVIRONMENT="${{ github.event.inputs.environment }}"
            IMAGE_URI="us-central1-docker.pkg.dev/sonneurs-juvi-${ENVIRONMENT}/backend-repo/springboot-backend"
          fi

          echo "ENV: $ENVIRONMENT"
          echo "IMAGE: $IMAGE_URI"

          # Config GCP
          gcloud config set project sonneurs-juvi-${ENVIRONMENT}

          # Charger les variables d’environnement
          cp .github/env.${ENVIRONMENT} .env
          export $(grep -v '^#' .env | xargs)

          # Déploiement Cloud Run
          gcloud run deploy $SERVICE_NAME \
            --image=$IMAGE_URI \
            --platform=managed \
            --region=$REGION \
            --allow-unauthenticated \
            --timeout=600s \
            --set-env-vars DB_NAME=${DB_NAME} \
            --set-env-vars DB_USERNAME=${DB_USERNAME} \
            --set-env-vars DB_PASSWORD=${DB_PASSWORD} \
            --set-env-vars INSTANCE_CONNECTION_NAME=${INSTANCE_CONNECTION_NAME}
