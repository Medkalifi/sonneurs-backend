name: Deploy Backend

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environnement cible'
        required: true
        type: choice
        options:
          - dev
          - prod
      target:
        description: 'Cible de déploiement'
        required: true
        type: choice
        options:
          - cloudrun
          - vm
          - gke

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Charger les variables d'environnement dynamiquement
        id: load-env
        run: |
          ENV_FILE=deploy/env.${{ github.event.inputs.environment }}
          if [ ! -f "$ENV_FILE" ]; then
            echo "Le fichier $ENV_FILE est introuvable"
            exit 1
          fi
          set -a
          source $ENV_FILE
          set +a
          echo "GCP_PROJECT=$GCP_PROJECT" >> $GITHUB_ENV
          echo "REGION=$REGION" >> $GITHUB_ENV
          echo "DOCKER_IMAGE=$DOCKER_IMAGE" >> $GITHUB_ENV
          echo "DB_NAME=$DB_NAME" >> $GITHUB_ENV
          echo "DB_USERNAME=$DB_USERNAME" >> $GITHUB_ENV
          echo "INSTANCE_CONNECTION_NAME=$INSTANCE_CONNECTION_NAME" >> $GITHUB_ENV

      - name: Authentification GCP
        env:
          GCP_CREDENTIALS: ${{ secrets.GCP_CREDENTIALS }}
        run: |
          echo "$GCP_CREDENTIALS" | base64 --decode > gcp-key.json
          gcloud auth activate-service-account --key-file=gcp-key.json
          gcloud config set project $GCP_PROJECT

      - name: Déploiement Cloud Run
        if: ${{ github.event.inputs.target == 'cloudrun' }}
        env:
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
        run: |
          gcloud config set run/region $REGION
          gcloud run deploy springboot-backend \
            --image=$DOCKER_IMAGE \
            --platform=managed \
            --region=$REGION \
            --allow-unauthenticated \
            --timeout=600s \
            --set-env-vars DB_NAME=$DB_NAME \
            --set-env-vars DB_USERNAME=$DB_USERNAME \
            --set-env-vars DB_PASSWORD=$DB_PASSWORD \
            --set-env-vars INSTANCE_CONNECTION_NAME=$INSTANCE_CONNECTION_NAME

      - name: Déploiement VM
        if: ${{ github.event.inputs.target == 'vm' }}
        env:
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
        run: |
          gcloud compute ssh vm-sonneurs-${{ github.event.inputs.environment }} --command "
            cd /home/chaib_ahmed_1932/app &&
            ./deploy.sh $DB_PASSWORD
          "

      - name: Déploiement GKE
        if: ${{ github.event.inputs.target == 'gke' }}
        run: |
          gcloud container clusters get-credentials sonneurs-cluster --zone $REGION-a --project $GCP_PROJECT
          kubectl apply -f k8s/deployment.yaml