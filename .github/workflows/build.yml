name: Build and Push Backend

on:
  push:
    branches:
      - main
      - moha-sonneur1
  pull_request:
    branches:
      - main

env:
  GCP_PROJECT: sonneurs-juvi-dev
  REGION: us-central1
  REPO_NAME: backend-repo
  IMAGE_NAME: springboot-backend
  GCS_BUCKET: sonneurs-docs-2025
  GCP_CREDENTIALS: ${{ secrets.GCP_CREDENTIALS }}

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Cache Maven dependencies
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven

      - name: Build with Maven
        run: mvn clean package spring-boot:repackage -DskipTests=true

      - name: Upload JAR to GCS
        run: |
          echo "${GCP_CREDENTIALS}" | base64 --decode > gcp-key.json
          gcloud auth activate-service-account --key-file=gcp-key.json
          gcloud config set project $GCP_PROJECT
          gsutil cp target/*.jar gs://$GCS_BUCKET/jars/

      - name: Build & Push Docker Image
        run: |
          echo "${GCP_CREDENTIALS}" | base64 --decode > gcp-key.json
          gcloud auth activate-service-account --key-file=gcp-key.json
          gcloud auth configure-docker ${REGION}-docker.pkg.dev --quiet

          IMAGE_TAG=${REGION}-docker.pkg.dev/${GCP_PROJECT}/${REPO_NAME}/${IMAGE_NAME}:${{ github.sha }}
          echo "Building image: $IMAGE_TAG"

          docker build -t $IMAGE_TAG .
          docker push $IMAGE_TAG

      - name: Trigger deploy
        uses: peter-evans/repository-dispatch@v3
        with:
          token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}  # <- Doit Ãªtre un PAT avec scope `repo`
          repository: Medkalifi/sonneurs-backend
          event-type: deploy-cloudrun
          client-payload: |
            {
              "environment": "dev",
              "image_uri": "${{ env.REGION }}-docker.pkg.dev/${{ env.GCP_PROJECT }}/${{ env.REPO_NAME }}/${{ env.IMAGE_NAME }}:${{ github.sha }}"
            }
