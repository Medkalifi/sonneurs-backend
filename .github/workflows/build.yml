name: Build and Test Backend

on:
  push:
    branches:
      - main
      - moha-sonneur1
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Cache Maven dependencies
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven

      - name: Build with Maven
        run: mvn clean install -DskipTests=true

      - name: Generate fat jar
        run: mvn clean package spring-boot:repackage -DskipTests=true

      - name: Upload jar to GCS
        env:
          GCP_CREDENTIALS: ${{ secrets.GCP_CREDENTIALS }}
        run: |
          echo "${GCP_CREDENTIALS}" | base64 --decode > gcp-key.json
          gcloud auth activate-service-account --key-file=gcp-key.json
          gcloud config set project sonneurs-juvi-dev
          gsutil cp target/*.jar gs://sonneurs-docs-2025/jars/

      - name: Build & Push Docker Image to Artifact Registry
        run: |
          gcloud auth configure-docker us-central1-docker.pkg.dev --quiet
          docker build -t us-central1-docker.pkg.dev/sonneurs-juvi-dev/backend-repo/springboot-backend .
          docker push us-central1-docker.pkg.dev/sonneurs-juvi-dev/backend-repo/springboot-backend

      - name: Set up environment variables
        run: |
          set -a
          source deploy/env.dev
          set +a

      - name: Generate app.yaml from app.template.yml
        run: |
          envsubst < deploy/app.template.yml > app.yaml
          ls -l app.yml  # Vérifie que le fichier est bien généré

      - name: Authenticate to Google Cloud
        env:
          GCP_CREDENTIALS: ${{ secrets.GCP_CREDENTIALS }}
        run: |
          echo "${GCP_CREDENTIALS}" | base64 --decode > gcp-key.json
          gcloud auth activate-service-account --key-file=gcp-key.json
          gcloud config set project $GCP_PROJECT
          gcloud config set app/cloud_build_timeout 1200

      - name: Deploy to App Engine
        run: |
          gcloud app deploy app.yml --quiet
