name: Build Backend

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      ENV_FILE: deploy/env.dev  

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Cache Maven
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}

      - name: Charger les variables dâ€™environnement
        id: load-env
        run: |
          set -a
          source $ENV_FILE
          set +a
          echo "GCP_PROJECT=$GCP_PROJECT" >> $GITHUB_ENV
          echo "GCS_BUCKET=$GCS_BUCKET" >> $GITHUB_ENV
          echo "DOCKER_IMAGE=$DOCKER_IMAGE" >> $GITHUB_ENV

      - name: Build JAR
        run: |
          mvn clean package spring-boot:repackage -DskipTests=true
          mv target/*.jar target/app.jar

      - name: Upload to GCS
        env:
          GCP_CREDENTIALS: ${{ secrets.GCP_CREDENTIALS }}
        run: |
          echo "$GCP_CREDENTIALS" | base64 --decode > gcp-key.json
          gcloud auth activate-service-account --key-file=gcp-key.json
          gcloud config set project $GCP_PROJECT
          gsutil cp target/app.jar gs://$GCS_BUCKET/jars/

      - name: Authenticate to GCP and configure Docker
        env:
          GCP_CREDENTIALS: ${{ secrets.GCP_CREDENTIALS }}
        run: |
          echo "$GCP_CREDENTIALS" | base64 --decode > gcp-key.json
          gcloud auth activate-service-account --key-file=gcp-key.json
          gcloud config set project $GCP_PROJECT
          gcloud auth configure-docker us-central1-docker.pkg.dev --quiet

      - name: Build Docker image
        run: |
          docker build -t $DOCKER_IMAGE .

      - name: Push Docker image
        run: |
          docker push $DOCKER_IMAGE
